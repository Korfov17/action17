name: Crear Release desde commit con versión

on:
  push:
    branches:
      - main  # Cambia si usas otra rama principal

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Obtener mensaje del último commit y validar versión
        id: commit
        run: |
          titulo=$(git log -1 --pretty=%s)
          cuerpo=$(git log -1 --pretty=%b)

          # Verificar si el título contiene una versión tipo x.y.z
          if [[ "$titulo" =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
            version="${BASH_REMATCH[0]}"
          else
            echo "No se detectó versión semántica en el commit. Saliendo."
            echo "crear_release=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Si el cuerpo está vacío, usar mensaje por defecto
          if [ -z "$cuerpo" ]; then
            cuerpo_formateado="- [GitHub] Sin Cambios"
          else
            cuerpo_formateado=$(echo "$cuerpo" | sed 's/^/- /')
          fi

          titulo_sanitizado=$(echo "$titulo" | tr -d '\n' | sed 's/[^a-zA-Z0-9._-]/_/g')

          {
            echo "crear_release=true"
            echo "version=$version"
            echo "titulo<<EOF"
            echo "$titulo"
            echo "EOF"
            echo "body<<EOF"
            echo "## Vault v$titulo"
            echo ""
            echo "$cuerpo_formateado"
            echo "EOF"
            echo "tag=Vault_v${titulo_sanitizado}"
          } >> "$GITHUB_OUTPUT"

      - name: Crear release
        if: steps.commit.outputs.crear_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.commit.outputs.tag }}
          name: "## Vault v${{ steps.commit.outputs.titulo }}"
          body: ${{ steps.commit.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
